func TestDigitsToNumber(t *testing.T) {
	testCases := []struct {
		n        []int
		expected int
	}{
		{[]int{5, 6, 0, 0, 3}, 56003},
		{[]int{2}, 2},
		{[]int{2, 3}, 23},
		{[]int{1, 2, 3, 0}, 1230},
		{[]int{0}, 0},
	}

	for _, testCase := range testCases {
		answer := digitsToNumber(testCase.n, len(testCase.n))
		if answer != testCase.expected {
			t.Errorf("ERROR: For %v expected %d, got %d", testCase.n, testCase.expected, answer)
		}
	}
}

func TestOneChildManual15(t *testing.T) {
	testCases := []struct {
		digits   int
		expected int
	}{
		{2, 9},
		{3, 120}, // TODO: Verify these values
		{4, 1170},
		{5, 10254},
		{6, 85560},
	}

	for _, testCase := range testCases {
		answer := oneChildManual15(testCase.digits)
		if answer != testCase.expected {
			t.Errorf("ERROR: For %d expected %d, got %d", testCase.digits, testCase.expected, answer)
		}
	}
}

func TestOneChild(t *testing.T) {
	testCases := []struct {
		digits   int
		expected int
	}{
		{1, 9},
		{2, 20},
		{3, 360},
		{4, 2701},
		{5, 4096},
		{6, 109466},
		{7, 161022},
		// {8, 13068583},
		// {9, 2136960},
		{10, 0},
		// {11, 71101800},
		// {12, 55121700430},
		// {13, 1057516028},
	}

	for _, testCase := range testCases {
		answer := oneChild(testCase.digits)
		if answer != testCase.expected {
			t.Errorf("ERROR: For %d expected %d, got %d", testCase.digits, testCase.expected, answer)
		}
	}
}

